error_log /var/log/nginx/error.log;
events {
    worker_connections  1024;  # サポートする同時接続数
}

http {
    log_format json escape=json '{"time":"$time_iso8601",'
                            '"host":"$remote_addr",'
                            '"port":$remote_port,'
                            '"method":"$request_method",'
                            '"uri":"$request_uri",'
                            '"status":"$status",'
                            '"body_bytes":$body_bytes_sent,'
                            '"referer":"$http_referer",'
                            '"ua":"$http_user_agent",'
                            '"request_time":"$request_time",'
                            '"response_time":"$upstream_response_time"}';

    access_log /var/log/nginx/access.log json;
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache_key:10m max_size=10g inactive=60m use_temp_path=off;

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
            proxy_pass http://flask-hoge.c0118050.svc.cluster.local:8080/;

            # 基本はキャッシュしない
            set $do_not_cache 1;

            # 画像のみキャッシュさせる
            if ($uri ~* \.(jpg|jpeg|png|gif|css|js|ico|webm)$) {
                set $do_not_cache 0;
            }

            proxy_no_cache $do_not_cache;

            # キャッシュの検索
            proxy_cache_bypass $do_not_cache;

            # バックエンド no-cache を無視
            proxy_ignore_headers Cache-Control;

            # キャッシュのキーゾーンを指定
            proxy_cache cache_key;

            # キャッシュの有効時間を指定
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10m;

            # キャッシュのステータスヘッダーを追加
            add_header X-Cache-Status $upstream_cache_status;
        }
        location /register {
            proxy_pass http://flask-hoge.c0118050.svc.cluster.local:8080/register;

            # 基本はキャッシュしない
            set $do_not_cache 1;

            # 画像のみキャッシュさせる
            if ($uri ~* \.(jpg|jpeg|png|gif|css|js|ico|webm)$) {
                set $do_not_cache 0;
            }

            proxy_no_cache $do_not_cache;

            # キャッシュの検索
            proxy_cache_bypass $do_not_cache;

            # バックエンド no-cache を無視
            proxy_ignore_headers Cache-Control;

            # キャッシュのキーゾーンを指定
            proxy_cache cache_key;

            # キャッシュの有効時間を指定
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10m;

            # キャッシュのステータスヘッダーを追加
            add_header X-Cache-Status $upstream_cache_status;
        }
        location /confirm {
            proxy_pass http://flask-hoge.c0118050.svc.cluster.local:8080/confirm;

            # 基本はキャッシュしない
            set $do_not_cache 1;

            # 画像のみキャッシュさせる
            if ($uri ~* \.(jpg|jpeg|png|gif|css|js|ico|webm)$) {
                set $do_not_cache 0;
            }

            proxy_no_cache $do_not_cache;

            # キャッシュの検索
            proxy_cache_bypass $do_not_cache;

            # バックエンド no-cache を無視
            proxy_ignore_headers Cache-Control;

            # キャッシュのキーゾーンを指定
            proxy_cache cache_key;

            # キャッシュの有効時間を指定
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10m;

            # キャッシュのステータスヘッダーを追加
            add_header X-Cache-Status $upstream_cache_status;
        }
        location /comp {
            proxy_pass http://flask-hoge.c0118050.svc.cluster.local:8080/comp;

            # 基本はキャッシュしない
            set $do_not_cache 1;

            # 画像のみキャッシュさせる
            if ($uri ~* \.(jpg|jpeg|png|gif|css|js|ico|webm)$) {
                set $do_not_cache 0;
            }

            proxy_no_cache $do_not_cache;

            # キャッシュの検索
            proxy_cache_bypass $do_not_cache;

            # バックエンド no-cache を無視
            proxy_ignore_headers Cache-Control;

            # キャッシュのキーゾーンを指定
            proxy_cache cache_key;

            # キャッシュの有効時間を指定
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10m;

            # キャッシュのステータスヘッダーを追加
            add_header X-Cache-Status $upstream_cache_status;
        }
        location ~ /novel/id[0-9] {
            proxy_pass http://flask-hoge.c0118050.svc.cluster.local:8080/novel/id[0-9];

            # 基本はキャッシュしない
            set $do_not_cache 1;

            # 画像のみキャッシュさせる
            if ($uri ~* \.(jpg|jpeg|png|gif|css|js|ico|webm)$) {
                set $do_not_cache 0;
            }

            proxy_no_cache $do_not_cache;

            # キャッシュの検索
            proxy_cache_bypass $do_not_cache;

            # バックエンド no-cache を無視
            proxy_ignore_headers Cache-Control;

            # キャッシュのキーゾーンを指定
            proxy_cache cache_key;

            # キャッシュの有効時間を指定
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10m;

            # キャッシュのステータスヘッダーを追加
            add_header X-Cache-Status $upstream_cache_status;
        }

   }
}

